
[repo]
kind = "recipe"

# all ag.toml files can optionally contain a version section.  if version of the running astroglue app is out of bounds a warning message will be printed
# to the user and the file will be ignored for future processing.
[version]
min="0.1.0"
max="4.5.8"

[processing.recipe.metadata]
author.name = "Kevin Hester"
author.email = "kevinh@geeksville.com"
description = "Process OSC single duo filter data, extracting Ha and Oiii"

# for single duo look for this
auto.for-filter = ["HaOiii"]

auto.for-camera = ["OSC"]


[[processing.stage]]

tool = "siril"
when = "session-light" # run once per session-config
output = "FIXME"

script = '''
    # Create a sequence from the raw light frames, seq file goes to process_dir
    link {light_base} -out={process_dir}
    cd {process_dir}

    # Calibrate the light frames using master bias and flat
    calibrate {light_base} -bias={strip_extension(bias)} -flat={strip_extension(flat)} -cfa -equalize_cfa

    # Remove background gradient on a per-frame basis (generates bkg_pp_{light_base}.seq)
    seqsubsky pp_{light_base} 1
    '''

temporaries = ["FIXME"]

[[processing.stage]]

tool = "python"
when = "session-stack" # run once after all session/session-config processing was done

script-file = "script.py"

# the function to run in that file, if not specified astro_fn() is used
script-function = "osc_dual_duo_post_session"

# or inline python code instead of that function?
script = '''
    # green output channel - from the HaOiii filter Ha is on the 656nm red channel
    make_stacked("HaOiii", "Ha", f"results_00001")

    # blue output channel - both filters have Oiii on the 500nm blue channel.  Note the case here is uppercase to match siril output
    make_stacked("*", "OIII", f"results_00002")

    # There might be an old/state autogenerated .seq file, delete it so it doesn't confuse renormalize
    results_seq_path = f"{process_dir}/results_.seq"
    if os.path.exists(results_seq_path):
        os.remove(results_seq_path)

    make_renormalize()
    '''