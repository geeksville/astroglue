
[repo]
kind = "recipe"


[recipe]
author.name = "FIXMESiril?"
author.email = "FIXMESiril?"
description = "Generate a master flat flat from raw flats"

[[stage]]

# Restrict processing of this stage to only if detected hardware was found for this session
# For any camera
auto.for-camera = []

tool = "siril"

# or auto?
# find the most recent raw fits for the current instrument (as of the time of session start)
# input.source = "most-recent" # only look for the most recent set of raws for this particular type
input.type = "bias" # look in all raw repos, but look only for bias files

# for early development we have support for simple absolute file paths with globs
input.source = "path"
input.path = "/workspaces/astroglue/images/from_astroby/masters-raw/2025-09-09/BIAS/*.fit*"

# make the following also work
#
#os.makedirs(os.path.dirname(output), exist_ok=True)
#os.makedirs(os.path.dirname(process_dir), exist_ok=True)
#frames = glob(f"{masters_raw}/{date}/BIAS/{date}_*.fit*")
#siril_run_in_temp_dir(frames, ...
when = "session-config" # run at the start of each session process

# The following constants are auto defined before running the tool
# context.process_dir (points to the session specific semi-persistent local dir for that sessions written/read data files)
# context.masters (FIXME) - need to find this name dynamically by looking for a suitable writable repo
# context.temp_dir (points to a temporary directory this tool can use for writing)

# Everything in the constants dict will be predefined as named variables for use by the script
context.date = "2025-09-09"  # FIXME - later find auto latest date with bias frames
context.output = "{masters}/biases/{date}_stacked.fits" # if the output already exists processing will be skipped

script = '''
    # Convert Bias Frames to .fit files
    link bias -out={process_dir}
    cd {process_dir}

    # Stack Bias Frames to bias_stacked.fit
    stack bias rej 3 3 -nonorm -out={output}
    '''