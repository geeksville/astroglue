

[repo]
kind = "preferences"

# FIXME, somewhere here list default patterns which can be used to identify NINA, ASIAIR, SEESTAR
# raw repo layouts

# List the initial search path to find other repos, when the app launches it always first loads this ag.toml file and this file should list all of the
# standard default repo locations.  When searching repos, repos listed LAST have precedence, so target file can override the root processing defaults,
# then the user prefs, then a live github URL or whatever

# [[repo.ref]]
# Possibly provide default repos via http from github?
# url = "https://github.com/geeksville/astroglue-default-repo"

[[repo.ref]]

# Add our built-in recipes (FIXME, add a "resource" repo type for directories we expect to find inside
# our python blob)
dir = "/workspaces/astroglue/doc/toml/example/recipe-repo"

[[repo.ref]]

# User custom settings live here
# For "dir" or "url" repos we expect to find an astroglue.toml file in the root of the directory.
# dir = "~/.config/astroglue"
# But temporarily during early development I'm keeping them in the master github
dir = "/workspaces/astroglue/doc/toml/example/config/user/"

# [[repo.ref]]

# recipe repos contain recipes (identified by name).  When any ag.toml file references
# a recipe the current path of all sources is searched to find that named recipe.

# the standard config includes a few key recipe repos, but interested users or tool
# vendors can define/provide their own

# add a place to find FOO.ag.toml files
# url = "http://fixme.com/foo-repo/somedir"

# test data.  Moved to user preferences (where it should should have been all along)
# [[repo.ref]]
# dir = "~/Pictures/telescope/from_astroboy"


# or inband?


# allow including multiple recipies FIXME old idea, not sure if needed.
# [[repo.ref]]

# looks for a file with this name and .py for the code and .toml for the config
# we'll expect that toml file to contain various [[recipe.*]] sections which will be loaded at this
# location in the sequence as if they were defined here
#by-file = "process-osc-dual-duo"
#by-url = "http:..."


# processing stages, currently all declared here, but possibly in the future they could be added by user/other toml files

[[stages]]
name = "session-config" # for flat processing, master generation etc
priority = 10

[[stages]]
name = "session-light" # generate light frames from lights and with reference to flats/bias
priority = 20

[[stages]]
name = "session-stack" # stack frames
priority = 30
